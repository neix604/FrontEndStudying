@font-face {
  font-family: 'Pretendard-Regular';
  src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');
  font-weight: 400;
  font-style: normal;
}

* {
  margin: 0;
  padding: 0;
}

body {
  font-family: 'Pretendard-Regular', 'Noto Sans KR', sans-serif;
  color: rgb(33, 33, 33);
  background: linear-gradient(to top right, violet, pink);
}

a {
  text-decoration: none;
  color: inherit;
}

li {
  list-style-type: none;
}

figure {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
}

figure header > h1 {
  font-size: 2rem;
}

figure header > p,
figure footer {
  font-size: 0.8rem;
}

figure > a {
  font-size: 1.8rem;
}

figure > header,
figure > footer,
figure > a {
  position: absolute;
  color: #fff;
  letter-spacing: 1px;
}

figure > header {
  top: 5vh;
  left: 5vw;
}

figure > a {
  top: 5vh;
  right: 5vw;
}

figure > footer {
  bottom: 3vh;
  left: 50vw;
  transform: translateX(-50%);
}

section {
  border: 1px solid black;
  width: 20vw;
  min-width: 300px;
  height: 60vh;
  min-height: 500px;
  position: absolute;
  top: 120%;
  left: 50%;
  margin-left: min(-10vw, -150px);
  transition: 0.8s ease-out;
}

article {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.contents {
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.9);
  border-radius: 15px;
  width: calc(20vw - 60px);
  min-width: 240px;
  height: calc(60vh - 60px);
  min-height: 440px;
  padding: 30px;
  display: flex;
  flex-flow: column wrap;
  justify-content: space-between;
  align-items: center;
  opacity: 0.8;
  transition: 0.8s ease-out;
  transform: scale(0.8);
}

section article.on .contents {
  transform: scale(1);
  opacity: 1;
}

.cover {
  width: 220px;
  height: 220px;
  border-radius: 50%;
}

.cover::before,
.cover::after {
  content: '';
  display: block;
  background: inherit;
  width: inherit;
  height: inherit;
  border-radius: inherit;
  position: absolute;
  top: 30px;
  left: 50%;
  margin-left: -110px;
}

.cover::before {
  transform: translateY(10%);
  filter: blur(30px);
}

.dot {
  position: absolute;
  background-color: #fff;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  top: 140px;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
  box-shadow: inset 10px 10px 10px rgba(0, 0, 0, 0.3);
}

.detail {
  text-align: center;
}

.detail > h2 {
  margin-bottom: 20px;
  font-size: 1.6rem;
}

.detail > p {
  font-size: 1rem;
  opacity: 0.8;
}

.btn ul {
  display: flex;
  flex-flow: row nowrap;
  gap: 50px;
  align-items: center;
}

.btn ul li.pause,
.btn ul li.replay {
  font-size: 1.5rem;
  opacity: 0.8;
}

.btn ul li.play {
  opacity: 1;
  font-size: 2rem;
}

.btn ul li {
  cursor: pointer;
  transition: 0.3s;
}

.btn ul li:hover {
  transform: scale(1.5);
  opacity: 1;
}

#next, #prev {
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  border: none;
  background-color: transparent;
  color: #fff;
  width: 50px;
  font-family: inherit;
  font-size: 0.9rem;
}

#next {
  left: calc(50% + 200px);
  text-align: right;
}

#prev {
  right: calc(50% + 200px);
  text-align: left;
}

#next span,
#prev span {
  transition: 0.3s;
}

#next:hover span {
  cursor: pointer;
  opacity: 0;
  transform: translateX(-100%);
}

#prev:hover span {
  cursor: pointer;
  opacity: 0;
  transform: translateX(100%);
}

#next::after,
#next::before {
  content: '';
  display: block;
  width: 100%;
  height: 1px;
  background: #fff;
  position: absolute;
  top: 50%;
  left: 80px;
  transition: 0.3s;
  transform-origin: left;
}

#next:hover::after {
  transform: rotate(150deg);
}

#next:hover::before {
  transform: rotate(-150deg);
}

#prev::after,
#prev::before {
  content: '';
  display: block;
  width: 100%;
  height: 1px;
  background: #fff;
  position: absolute;
  top: 50%;
  left: -80px;
  transition: 0.3s;
  transform-origin: right;
}

#prev:hover::after {
  transform: rotate(150deg);
}

#prev:hover::before {
  transform: rotate(-150deg);
}

@keyframes rotation {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes rotationShadow {
  from {
    transform: translateY(10%) (0deg);
  }
  to {
    transform: translateY(10%) rotate(360deg);
  }
}

.cover.on::after {
  animation: rotation 10s linear infinite;
}

.cover.on::before {
  animation: rotationShadow 10s linear infinite;
}